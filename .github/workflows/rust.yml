name: Rust

on: [push, pull_request]

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      paths_result: ${{ steps.skip_check.outputs.paths_result }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@c449d86cf33a2a6c7a4193264cc2578e2c3266d4
        with:
          paths_ignore: '["docs/**", "*.md"]'

  build-linux:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.51.0
          default: true
          override: true

      - name: Build
        run: cargo build --all --release && mv target/release/squawk target/release/squawk-linux-x86_64

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/squawk-linux-x86_64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # windows isn't supported by libpg_query
  # https://github.com/lfittl/libpg_query/issues/44

  build-mac:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'

    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.51.0
          target: x86_64-apple-darwin
          default: true
          override: true

      - name: Build for mac
        run: cargo build --all --release && mv target/release/squawk target/release/squawk-darwin-x86_64

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/squawk-darwin-x86_64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lint:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.51.0
          default: true
          override: true

      - name: Install Rust Fmt
        run: rustup component add rustfmt

      - name: Install Clippy
        run: rustup component add clippy

      - name: Get Clippy Version
        run: cargo clippy --version

      - name: Lint
        run: ./s/lint

  test:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.51.0
          default: true
          override: true

      - name: Test
        run: ./s/test
