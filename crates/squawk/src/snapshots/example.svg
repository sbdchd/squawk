<svg width="1465px" height="1100px" xmlns="http://www.w3.org/2000/svg">
  <style>
    .fg { fill: #AAAAAA }
    .bg { fill: #000000 }
    .fg-bright-blue { fill: #5555FF }
    .fg-bright-green { fill: #55FF55 }
    .fg-bright-red { fill: #FF5555 }
    .fg-yellow { fill: #AA5500 }
    .container {
      padding: 0 10px;
      line-height: 18px;
    }
    .bold { font-weight: bold; }
    .underline { text-decoration-line: underline; }
    tspan {
      font: 14px SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;
      white-space: pre;
      line-height: 18px;
    }
  </style>

  <rect width="100%" height="100%" y="0" rx="4.5" class="bg" />

  <text xml:space="preserve" class="container fg">
    <tspan x="10px" y="28px"><tspan class="fg-yellow bold">warning[prefer-bigint-over-int]</tspan><tspan class="bold">: Using 32-bit integer fields can result in hitting the max `int` limit.</tspan>
</tspan>
    <tspan x="10px" y="46px"><tspan> </tspan><tspan class="fg-bright-blue bold"> ╭▸ </tspan><tspan>../../example.sql:6:10</tspan>
</tspan>
    <tspan x="10px" y="64px"><tspan>  </tspan><tspan class="fg-bright-blue bold">│</tspan>
</tspan>
    <tspan x="10px" y="82px"><tspan class="fg-bright-blue bold">6</tspan><tspan> </tspan><tspan class="fg-bright-blue bold">│</tspan><tspan>     "id" serial NOT NULL PRIMARY KEY, </tspan>
</tspan>
    <tspan x="10px" y="100px"><tspan>  </tspan><tspan class="fg-bright-blue bold">│</tspan><tspan>          </tspan><tspan class="fg-yellow bold">━━━━━━</tspan>
</tspan>
    <tspan x="10px" y="118px"><tspan>  </tspan><tspan class="fg-bright-blue bold">│</tspan>
</tspan>
    <tspan x="10px" y="136px"><tspan>  </tspan><tspan class="fg-bright-blue bold">├ </tspan><tspan class="bold">help</tspan><tspan>: Use 64-bit integer values instead to prevent hitting this limit.</tspan>
</tspan>
    <tspan x="10px" y="154px"><tspan>  </tspan><tspan class="fg-bright-blue bold">╭╴</tspan>
</tspan>
    <tspan x="10px" y="172px"><tspan class="fg-bright-blue bold">6</tspan><tspan> </tspan><tspan class="fg-bright-blue bold">│ </tspan><tspan>    "id" </tspan><tspan class="fg-bright-green">big</tspan><tspan>serial NOT NULL PRIMARY KEY, </tspan>
</tspan>
    <tspan x="10px" y="190px"><tspan>  </tspan><tspan class="fg-bright-blue bold">╰╴</tspan><tspan>         </tspan><tspan class="fg-bright-green">+++</tspan>
</tspan>
    <tspan x="10px" y="208px"><tspan class="fg-yellow bold">warning[prefer-identity]</tspan><tspan class="bold">: Serial types make schema, dependency, and permission management difficult.</tspan>
</tspan>
    <tspan x="10px" y="226px"><tspan> </tspan><tspan class="fg-bright-blue bold"> ╭▸ </tspan><tspan>../../example.sql:6:10</tspan>
</tspan>
    <tspan x="10px" y="244px"><tspan>  </tspan><tspan class="fg-bright-blue bold">│</tspan>
</tspan>
    <tspan x="10px" y="262px"><tspan class="fg-bright-blue bold">6</tspan><tspan> </tspan><tspan class="fg-bright-blue bold">│</tspan><tspan>     "id" serial NOT NULL PRIMARY KEY, </tspan>
</tspan>
    <tspan x="10px" y="280px"><tspan>  </tspan><tspan class="fg-bright-blue bold">│</tspan><tspan>          </tspan><tspan class="fg-yellow bold">━━━━━━</tspan>
</tspan>
    <tspan x="10px" y="298px"><tspan>  </tspan><tspan class="fg-bright-blue bold">│</tspan>
</tspan>
    <tspan x="10px" y="316px"><tspan>  </tspan><tspan class="fg-bright-blue bold">├ </tspan><tspan class="bold">help</tspan><tspan>: Use an `IDENTITY` column instead.</tspan>
</tspan>
    <tspan x="10px" y="334px"><tspan>  </tspan><tspan class="fg-bright-blue bold">╭╴</tspan>
</tspan>
    <tspan x="10px" y="352px"><tspan class="fg-bright-blue bold">6</tspan><tspan> </tspan><tspan class="fg-bright-red">- </tspan><tspan>    "id" </tspan><tspan class="fg-bright-red">serial</tspan><tspan> NOT NULL PRIMARY KEY, </tspan>
</tspan>
    <tspan x="10px" y="370px"><tspan class="fg-bright-blue bold">6</tspan><tspan> </tspan><tspan class="fg-bright-green">+ </tspan><tspan>    "id" </tspan><tspan class="fg-bright-green">integer generated by default as identity</tspan><tspan> NOT NULL PRIMARY KEY, </tspan>
</tspan>
    <tspan x="10px" y="388px"><tspan>  </tspan><tspan class="fg-bright-blue bold">╰╴</tspan>
</tspan>
    <tspan x="10px" y="406px"><tspan class="fg-yellow bold">warning[prefer-text-field]</tspan><tspan class="bold">: Changing the size of a `varchar` field requires an `ACCESS EXCLUSIVE` lock, that will prevent all reads and writes to the table.</tspan>
</tspan>
    <tspan x="10px" y="424px"><tspan> </tspan><tspan class="fg-bright-blue bold"> ╭▸ </tspan><tspan>../../example.sql:7:13</tspan>
</tspan>
    <tspan x="10px" y="442px"><tspan>  </tspan><tspan class="fg-bright-blue bold">│</tspan>
</tspan>
    <tspan x="10px" y="460px"><tspan class="fg-bright-blue bold">7</tspan><tspan> </tspan><tspan class="fg-bright-blue bold">│</tspan><tspan>     "alpha" varchar(100) NOT NULL</tspan>
</tspan>
    <tspan x="10px" y="478px"><tspan>  </tspan><tspan class="fg-bright-blue bold">│</tspan><tspan>             </tspan><tspan class="fg-yellow bold">━━━━━━━━━━━━</tspan>
</tspan>
    <tspan x="10px" y="496px"><tspan>  </tspan><tspan class="fg-bright-blue bold">│</tspan>
</tspan>
    <tspan x="10px" y="514px"><tspan>  </tspan><tspan class="fg-bright-blue bold">├ </tspan><tspan class="bold">help</tspan><tspan>: Use a `TEXT` field with a `CHECK` constraint.</tspan>
</tspan>
    <tspan x="10px" y="532px"><tspan>  </tspan><tspan class="fg-bright-blue bold">╭╴</tspan>
</tspan>
    <tspan x="10px" y="550px"><tspan class="fg-bright-blue bold">7</tspan><tspan> </tspan><tspan class="fg-bright-red">- </tspan><tspan>    "alpha" </tspan><tspan class="fg-bright-red">varchar(100)</tspan><tspan> NOT NULL</tspan>
</tspan>
    <tspan x="10px" y="568px"><tspan class="fg-bright-blue bold">7</tspan><tspan> </tspan><tspan class="fg-bright-green">+ </tspan><tspan>    "alpha" </tspan><tspan class="fg-bright-green">text</tspan><tspan> NOT NULL</tspan>
</tspan>
    <tspan x="10px" y="586px"><tspan>  </tspan><tspan class="fg-bright-blue bold">╰╴</tspan>
</tspan>
    <tspan x="10px" y="604px"><tspan class="fg-yellow bold">warning[require-concurrent-index-creation]</tspan><tspan class="bold">: During normal index creation, table updates are blocked, but reads are still allowed.</tspan>
</tspan>
    <tspan x="10px" y="622px"><tspan>  </tspan><tspan class="fg-bright-blue bold"> ╭▸ </tspan><tspan>../../example.sql:10:1</tspan>
</tspan>
    <tspan x="10px" y="640px"><tspan>   </tspan><tspan class="fg-bright-blue bold">│</tspan>
</tspan>
    <tspan x="10px" y="658px"><tspan class="fg-bright-blue bold">10</tspan><tspan> </tspan><tspan class="fg-bright-blue bold">│</tspan><tspan> CREATE INDEX "field_name_idx" ON "table_name" ("field_name");</tspan>
</tspan>
    <tspan x="10px" y="676px"><tspan>   </tspan><tspan class="fg-bright-blue bold">│</tspan><tspan> </tspan><tspan class="fg-yellow bold">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</tspan>
</tspan>
    <tspan x="10px" y="694px"><tspan>   </tspan><tspan class="fg-bright-blue bold">│</tspan>
</tspan>
    <tspan x="10px" y="712px"><tspan>   </tspan><tspan class="fg-bright-blue bold">├ </tspan><tspan class="bold">help</tspan><tspan>: Use `concurrently` to avoid blocking writes.</tspan>
</tspan>
    <tspan x="10px" y="730px"><tspan>   </tspan><tspan class="fg-bright-blue bold">╭╴</tspan>
</tspan>
    <tspan x="10px" y="748px"><tspan class="fg-bright-blue bold">10</tspan><tspan> </tspan><tspan class="fg-bright-blue bold">│ </tspan><tspan>CREATE INDEX</tspan><tspan class="fg-bright-green"> concurrently</tspan><tspan> "field_name_idx" ON "table_name" ("field_name");</tspan>
</tspan>
    <tspan x="10px" y="766px"><tspan>   </tspan><tspan class="fg-bright-blue bold">╰╴</tspan><tspan>             </tspan><tspan class="fg-bright-green">++++++++++++</tspan>
</tspan>
    <tspan x="10px" y="784px"><tspan class="fg-yellow bold">warning[constraint-missing-not-valid]</tspan><tspan class="bold">: By default new constraints require a table scan and block writes to the table while that scan occurs.</tspan>
</tspan>
    <tspan x="10px" y="802px"><tspan>  </tspan><tspan class="fg-bright-blue bold"> ╭▸ </tspan><tspan>../../example.sql:12:24</tspan>
</tspan>
    <tspan x="10px" y="820px"><tspan>   </tspan><tspan class="fg-bright-blue bold">│</tspan>
</tspan>
    <tspan x="10px" y="838px"><tspan class="fg-bright-blue bold">12</tspan><tspan> </tspan><tspan class="fg-bright-blue bold">│</tspan><tspan> ALTER TABLE table_name ADD CONSTRAINT field_name_constraint UNIQUE (field_name);</tspan>
</tspan>
    <tspan x="10px" y="856px"><tspan>   </tspan><tspan class="fg-bright-blue bold">│</tspan><tspan>                        </tspan><tspan class="fg-yellow bold">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</tspan>
</tspan>
    <tspan x="10px" y="874px"><tspan>   </tspan><tspan class="fg-bright-blue bold">│</tspan>
</tspan>
    <tspan x="10px" y="892px"><tspan>   </tspan><tspan class="fg-bright-blue bold">╰ </tspan><tspan class="bold">help</tspan><tspan>: Use `NOT VALID` with a later `VALIDATE CONSTRAINT` call.</tspan>
</tspan>
    <tspan x="10px" y="910px"><tspan class="fg-yellow bold">warning[disallowed-unique-constraint]</tspan><tspan class="bold">: Adding a `UNIQUE` constraint requires an `ACCESS EXCLUSIVE` lock which blocks reads and writes to the table while the index is built.</tspan>
</tspan>
    <tspan x="10px" y="928px"><tspan>  </tspan><tspan class="fg-bright-blue bold"> ╭▸ </tspan><tspan>../../example.sql:12:28</tspan>
</tspan>
    <tspan x="10px" y="946px"><tspan>   </tspan><tspan class="fg-bright-blue bold">│</tspan>
</tspan>
    <tspan x="10px" y="964px"><tspan class="fg-bright-blue bold">12</tspan><tspan> </tspan><tspan class="fg-bright-blue bold">│</tspan><tspan> ALTER TABLE table_name ADD CONSTRAINT field_name_constraint UNIQUE (field_name);</tspan>
</tspan>
    <tspan x="10px" y="982px"><tspan>   </tspan><tspan class="fg-bright-blue bold">│</tspan><tspan>                            </tspan><tspan class="fg-yellow bold">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</tspan>
</tspan>
    <tspan x="10px" y="1000px"><tspan>   </tspan><tspan class="fg-bright-blue bold">│</tspan>
</tspan>
    <tspan x="10px" y="1018px"><tspan>   </tspan><tspan class="fg-bright-blue bold">╰ </tspan><tspan class="bold">help</tspan><tspan>: Create an index `CONCURRENTLY` and create the constraint using the index.</tspan>
</tspan>
    <tspan x="10px" y="1036px">
</tspan>
    <tspan x="10px" y="1054px"><tspan>Find detailed examples and solutions for each rule at </tspan><tspan class="underline">https://squawkhq.com/docs/rules</tspan>
</tspan>
    <tspan x="10px" y="1072px"><tspan>Found 6 issues in 1 file (checked 1 source file)</tspan>
</tspan>
    <tspan x="10px" y="1090px">
</tspan>
  </text>

</svg>
